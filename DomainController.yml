AWSTemplateFormatVersion: '2010-09-09'
Description: This template creates a single server installation of Active Directory.
  Domain Administrator password will be the one retrieved from the instance.
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Network configuration
        Parameters:
          - EnvironmentName
          - CostCenter
          - VPCCIDR
          - VPC
          - SubnetId
      - Label:
          default: Amazon EC2 configuration
        Parameters:
          - InstanceType
          - ADServer1NetBIOSName
          - ADServer1PrivateIP
          - EbsEncryptionKmsKeyId
          - KeyPairName
          - ImageId
      - Label:
          default: Microsoft Active Directory Domain Services configuration
        Parameters:
          - DomainAdminUser
          - DomainAdminPassword
          - DomainDNSName
          - DomainNetBIOSName
          - RestoreModePassword
    ParameterLabels:
      EnvironmentName:
        default: Environment Name
      CostCenter:
        default: CostCenter Name
      InstanceType:
        default: Domain Controller 1 Instance Type
      ADServer1PrivateIP:
        default: Domain Controller 1 Private IP Address
      KeyPairName:
        default: Key Pair Name
      SubnetId:
        default: Subnet 1 ID
      VPCCIDR:
        default: VPC CIDR
      VPCID:
        default: VPC ID
      ImageId:
        default: SSM Parameter Value for Latest AMI ID
Parameters:
  EnvironmentName:
      Description: An environment name that is prefixed to resource names
      Type: String
      Default: demo
  CostCenter:
    Description: Enter Cost Center name
    Type: String
  AutoStop:
    Description: Do you Want to Start and Stop Environment automatically?
    Type: String
    Default: True
  KeyPairName:
    Description: Amazon EC2 Key Pair
    Type: AWS::EC2::KeyPair::KeyName
  InstanceType:
    Description: Amazon EC2 instance type
    Type: String
    Default: t3.large
    AllowedValues:
      - t3.small
      - t3.medium
      - t3.large
      - t3.xlarge
      - t3.2xlarge
  VPCCIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.200.0.0/16
    Description: CIDR block for the VPC
    Type: String
  VPC:
    Description: Enter the VpcId
    Type: AWS::EC2::VPC::Id
  SubnetId:
    Description: Enter the SubnetId
    Type: AWS::EC2::Subnet::Id
  DomainDNSName:
    Description: Fully qualified domain name (FQDN) of the forest root domain e.g.
      corp.example.com
    Type: String
    MinLength: '3'
    MaxLength: '25'
    AllowedPattern: "[a-zA-Z0-9]+\\..+"
  DomainNetBIOSName:
    Description: NetBIOS name of the domain (upto 15 characters) for users of earlier
      versions of Windows e.g. CORP
    Type: String
    MinLength: '1'
    MaxLength: '15'
    AllowedPattern: "[a-zA-Z0-9]+"
  RestoreModePassword:
    Description: Password for a separate Administrator account when the domain controller
      is in Restore Mode. Must be at least 8 characters containing letters, numbers
      and symbols
    Type: String
    MinLength: '8'
    MaxLength: '32'
    AllowedPattern: "(?=^.{6,255}$)((?=.*\\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*"
    NoEcho: 'True'
  ADServer1PrivateIP:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$
    Default: 10.200.12.10
    Description: Fixed private IP for the first Active Directory Domain Controller located in Availability Zone 1
    Type: String
  EbsEncryptionKmsKeyId:
    Default: alias/aws/ebs
    Description: The identifier of the AWS KMS key to use for Amazon EBS encryption. You can specify the KMS key using any of the following; Key ID, Key alias, Key ARN, Alias ARN
    Type: String
  ImageId:
    Default: /aws/service/ami-windows-latest/Windows_Server-2012-R2_RTM-English-64Bit-Base
    Description: System Manager parameter value for latest Windows Server AMI
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>

Resources:
  myENI:
      Type: AWS::EC2::NetworkInterface
      Properties:
         Tags:
         - Key: Name
           Value: Domain
         - Key: CostCenter
           Value: !Ref CostCenter
         Description: Domain Static Network
         GroupSet: 
         - !Sub ${DomainControllerSecurityGroup.GroupId}
         SourceDestCheck: 'false'
         SubnetId: !Ref SubnetId
         PrivateIpAddress: !Ref ADServer1PrivateIP
  DomainController:
    Type: AWS::EC2::Instance
    Metadata:
      AWS::CloudFormation::Init:
        config:
          files:
            c:\cfn\cfn-hup.conf:
              content:
                Fn::Join:
                - ''
                - - "[main]\n"
                  - stack=
                  - Ref: AWS::StackId
                  - "\n"
                  - region=
                  - Ref: AWS::Region
                  - "\n"
            c:\cfn\hooks.d\cfn-auto-reloader.conf:
              content:
                Fn::Join:
                - ''
                - - "[cfn-auto-reloader-hook]\n"
                  - 'triggers=post.update

                    '
                  - 'path=Resources.DomainController.Metadata.AWS::CloudFormation::Init

                    '
                  - 'action=cfn-init.exe -v -s '
                  - Ref: AWS::StackId
                  - " -r DomainController"
                  - " --region "
                  - Ref: AWS::Region
                  - "\n"
            C:\cfn\RunCommand.bat:
              content: |-
                %~1
                IF %ERRORLEVEL% GTR 10 ( exit /b 1 ) else ( exit /b 0 )
          commands:
            1-run-dcpromo:
              command:
                Fn::Join:
                - ''
                - - 'C:\cfn\RunCommand.bat "dcpromo /unattend  /ReplicaOrNewDomain:Domain  /NewDomain:Forest  /NewDomainDNSName:'
                  - Ref: DomainDNSName
                  - "  /ForestLevel:4 /DomainNetbiosName:"
                  - Ref: DomainNetBIOSName
                  - ' /DomainLevel:4  /InstallDNS:Yes  /ConfirmGc:Yes  /CreateDNSDelegation:No  /DatabasePath:"C:\Windows\NTDS"  /LogPath:"C:\Windows\NTDS"  /SYSVOLPath:"C:\Windows\SYSVOL"
                    /SafeModeAdminPassword='
                  - Ref: RestoreModePassword
                  - ' /RebootOnCompletion:Yes"'
              waitAfterCompletion: forever
            2-signal-success:
              command:
                Fn::Join:
                - ''
                - - cfn-signal.exe -e 0 "
                  - Fn::Base64:
                      Ref: DomainControllerWaitHandle
                  - "\""
          services:
            windows:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - c:\cfn\cfn-hup.conf
                - c:\cfn\hooks.d\cfn-auto-reloader.conf
    Properties:
      ImageId:
        Ref: ImageId
      InstanceType:
        Ref: InstanceType
      NetworkInterfaces:
      - NetworkInterfaceId:
         Ref: myENI
        DeviceIndex: '0'
      KeyName:
        Ref: KeyPairName
      UserData:
        Fn::Base64:
          Fn::Join:
          - ''
          - - "<script>\n"
            - 'cfn-init.exe -v -s '
            - Ref: AWS::StackId
            - " -r DomainController "
            - " --region "
            - Ref: AWS::Region
            - "\n"
            - "</script>"
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} ADServer
        - Key: Domain
          Value: !Ref 'DomainDNSName'
        - Key: "Environment"
          Value: !Sub ${EnvironmentName}
        - Key: CostCenter
          Value: !Ref CostCenter
        - Key: AutoStart
          Value: !Ref AutoStop
        - Key: AutoStop
          Value: !Ref AutoStop
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: 60
            VolumeType: gp3
            Encrypted: true
            KmsKeyId: !Ref 'EbsEncryptionKmsKeyId'
            DeleteOnTermination: true

  DomainControllerWaitCondition:
    Type: AWS::CloudFormation::WaitCondition
    DependsOn: DomainController
    Properties:
      Handle:
        Ref: DomainControllerWaitHandle
      Timeout: '1500'
  DomainControllerWaitHandle:
    Type: AWS::CloudFormation::WaitConditionHandle
  DomainControllerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow RDP to client host
      SecurityGroupIngress:
      - CidrIp: !Ref VPCCIDR
        IpProtocol: -1
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-DomainSG
        - Key: CostCenter
          Value: !Ref CostCenter
  MYDhcpOptions: 
      Type: AWS::EC2::DHCPOptions
      DependsOn: DomainController
      Properties: 
          DomainName: !Ref DomainDNSName
          DomainNameServers: 
            - !Ref ADServer1PrivateIP
            - AmazonProvidedDNS
  MYVPCDHCPOptionsAssociation:
    Type: AWS::EC2::VPCDHCPOptionsAssociation
    Properties:
      VpcId:
        Ref: VPC
      DhcpOptionsId:
        Ref: MYDhcpOptions