AWSTemplateFormatVersion: 2010-09-09

Description: This template creates vpc with public and private subnets for demo Env
# The following metadata is used to group the parameters
Metadata:
  AWS::CloudFormation::Interface: 
    ParameterGroups:
      - 
        Label: 
          default: "VPC configuration parameters"
        Parameters: 
          - EnvironmentName
          - VpcCIDR
      - 
        Label: 
          default: "Subnet CIDR"
        Parameters:
          - PublicSubnet1CIDR
          - PublicSubnet2CIDR
          - PrivateSubnet1CIDR
          - PrivateSubnet2CIDR

Parameters:
  EnvironmentName:
    Description: An environment name that is prefixed to resource names
    Type: String

  VpcCIDR:
    Default: 10.200.0.0/16
    Description: Please enter the IP range (CIDR notation) for this VPC
    Type: String

  PublicSubnet1CIDR:
    Default: 10.200.0.0/24
    Description: Please enter the IP range (CIDR notation) for the public subnet 1
    Type: String

  PublicSubnet2CIDR:
    Default: 10.200.1.0/24
    Description: Please enter the IP range (CIDR notation) for the public subnet 2
    Type: String

  PrivateSubnet1CIDR:
    Default: 10.200.2.0/24
    Description: Please enter the IP range (CIDR notation) for the private subnet 1
    Type: String

  PrivateSubnet2CIDR:
    Default: 10.200.3.0/24
    Description: Please enter the IP range (CIDR notation) for the private subnet 2
    Type: String

Resources:
# Create VPC
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName

# Create Internet Gateway
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName

# Attach Internet Gateway to VPC
  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

# Create Public Subnet1
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: !Ref PublicSubnet1CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Public Subnet 1
      VpcId: !Ref VPC

# Create Public Subnet2
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      CidrBlock: !Ref PublicSubnet2CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Public Subnet 2
      VpcId: !Ref VPC

# Create Route Table
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Public Route
      VpcId: !Ref VPC

# Add a Public Route to the Route Table
  PublicRoute:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref PublicRouteTable

# Associate Public Subnet1 with Public Route Table
  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1

# Associate Public Subnet2 with Public Route Table
  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet2

# Create Private Subnet1
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [ 0, !GetAZs  '' ]
      CidrBlock: !Ref PrivateSubnet1CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Private Subnet 1
      VpcId: !Ref VPC

# Create Private Subnet2
  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      CidrBlock: !Ref PrivateSubnet2CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Private Subnet 2
      VpcId: !Ref VPC
# resources: ssm parameters

  ParameterVpcNetworkId:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /${AWS::StackName}/resources/ec2/vpc/vpc-id
      Type: String
      Value: !Sub ${VPC}
  ParameterVpcNetworkCidrBlock:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /${AWS::StackName}/resources/ec2/vpc/cidr-block
      Type: String
      Value: !Sub ${VPC.CidrBlock}
  ParamaterSubnetPublicIds:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /${AWS::StackName}/resources/ec2/subnet/-/public-subnets/subnet-ids
      Type: StringList
      Value: !Sub ${PublicSubnet1},${PublicSubnet2}
  ParamaterSubnetPrivateIds:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /${AWS::StackName}/resources/ec2/subnet/-/private-subnets/subnet-ids
      Type: StringList
      Value: !Sub ${PrivateSubnet1},${PrivateSubnet2}
  ParameterPublicSubnet1CidrBlock:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /${AWS::StackName}/resources/ec2/subnet/PublicSubnet1/ipv4-cidr-block
      Type: String
      Value: !Sub ${PublicSubnet1CIDR}
  ParameterPublicSubnet2CidrBlock:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /${AWS::StackName}/resources/ec2/subnet/PublicSubnet2/ipv4-cidr-block
      Type: String
      Value: !Sub ${PublicSubnet2CIDR}
  ParameterPrivateSubnet1CidrBlock:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /${AWS::StackName}/resources/ec2/subnet/PrivateSubnet1/ipv4-cidr-block
      Type: String
      Value: !Sub ${PrivateSubnet1CIDR}
  ParameterPrivateSubnet2CidrBlock:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /${AWS::StackName}/resources/ec2/subnet/PrivateSubnet2/ipv4-cidr-block
      Type: String
      Value: !Sub ${PrivateSubnet2CIDR}
  ParameterPublicSubnet1Id:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /${AWS::StackName}/resources/ec2/subnet/PublicSubnet1/subnet-id
      Type: String
      Value: !Sub ${PublicSubnet1}
  ParameterPublicSubnet2Id:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /${AWS::StackName}/resources/ec2/subnet/PublicSubnet2/subnet-id
      Type: String
      Value: !Sub ${PublicSubnet2}
  ParameterPrivateSubnet1Id:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /${AWS::StackName}/resources/ec2/subnet/PrivateSubnet1/subnet-id
      Type: String
      Value: !Sub ${PrivateSubnet1}
  ParameterPrivateSubnet2Id:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /${AWS::StackName}/resources/ec2/subnet/PrivateSubnet2/subnet-id
      Type: String
      Value: !Sub ${PrivateSubnet2}